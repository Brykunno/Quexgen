# Generated by Django 5.0.6 on 2025-03-30 13:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.TextField()),
                ('course_code', models.TextField()),
                ('course_type', models.TextField()),
                ('status', models.TextField(null=True)),
                ('course_syllabus', models.FileField(blank=True, null=True, upload_to='syllabus/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_title', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'exam',
            },
        ),
        migrations.CreateModel(
            name='ExamDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('midterm_exam', models.TextField()),
                ('finals_exam', models.TextField()),
                ('summer_exam', models.TextField()),
            ],
            options={
                'db_table': 'exam_dates',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.TextField()),
                ('status', models.TextField()),
                ('log_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'logs',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chairperson', models.TextField(default='Dr. Reyjohn Frias')),
                ('dean', models.TextField(default='Dr. Marmie Poquiz')),
                ('director', models.TextField(default='Dr. Liza L. Quimson')),
                ('academic_year', models.TextField(default='2025-2026')),
            ],
            options={
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='TOS_Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.TextField()),
                ('learning_outcomes', models.TextField(null=True)),
                ('teachingHours', models.FloatField(null=True)),
                ('allocation', models.IntegerField(null=True)),
                ('items', models.IntegerField(null=True)),
                ('remembering', models.IntegerField(null=True)),
                ('understanding', models.IntegerField(null=True)),
                ('applying', models.IntegerField(null=True)),
                ('analyzing', models.IntegerField(null=True)),
                ('evaluating', models.IntegerField(null=True)),
                ('creating', models.IntegerField(null=True)),
                ('total', models.IntegerField(null=True)),
                ('placement', models.CharField(max_length=100, null=True)),
                ('totalItems', models.IntegerField(null=True)),
                ('tos_date_added', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'tos_content',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('context', models.TextField(null=True)),
                ('question_type', models.TextField(null=True)),
                ('exam_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exam_id', to='api.exam')),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Context',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.TextField(null=True)),
                ('taxonomy_level', models.TextField()),
                ('test_type', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_context', to='api.questions')),
            ],
            options={
                'db_table': 'context',
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('choices', models.TextField()),
                ('question_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_id', to='api.questions')),
            ],
            options={
                'db_table': 'answers',
            },
        ),
        migrations.CreateModel(
            name='Teacher_Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_id', to='api.courses')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teacher_course',
            },
        ),
        migrations.CreateModel(
            name='TestPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.TextField()),
                ('test_instruction', models.TextField()),
                ('test_part_num', models.IntegerField()),
                ('exam_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_exam_id', to='api.exam')),
            ],
            options={
                'db_table': 'test_part',
            },
        ),
        migrations.AddField(
            model_name='questions',
            name='test_part_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_part_id', to='api.testpart'),
        ),
        migrations.CreateModel(
            name='TaxonomyLevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remembering', models.IntegerField()),
                ('understanding', models.IntegerField()),
                ('applying', models.IntegerField()),
                ('analyzing', models.IntegerField()),
                ('evaluating', models.IntegerField()),
                ('creating', models.IntegerField()),
                ('tos_content_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tos_content_id', to='api.tos_content')),
            ],
            options={
                'db_table': 'taxonomy_levels',
            },
        ),
        migrations.CreateModel(
            name='Learning_Outcomes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learning_outcomes', models.TextField()),
                ('teachingHours', models.FloatField()),
                ('allocation', models.IntegerField()),
                ('items', models.IntegerField()),
                ('remembering', models.IntegerField()),
                ('understanding', models.IntegerField()),
                ('applying', models.IntegerField()),
                ('analyzing', models.IntegerField()),
                ('evaluating', models.IntegerField()),
                ('creating', models.IntegerField()),
                ('total', models.IntegerField()),
                ('placement', models.CharField(max_length=100)),
                ('tos_content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tos_content_lo', to='api.tos_content')),
            ],
            options={
                'db_table': 'learning_outcomes',
            },
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_guide', models.FileField(upload_to='uploads/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('tos_content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tos_content_file', to='api.tos_content')),
            ],
            options={
                'db_table': 'study_guides',
            },
        ),
        migrations.CreateModel(
            name='TOS_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.TextField()),
                ('Semester', models.TextField()),
                ('Term', models.TextField(null=True)),
                ('AcademicYear', models.TextField()),
                ('Campus', models.TextField()),
                ('CourseCode', models.TextField()),
                ('Department', models.TextField()),
                ('ExaminationType', models.TextField()),
                ('CourseType', models.TextField()),
                ('ExaminationDate', models.TextField()),
                ('Faculty', models.TextField()),
                ('Chairperson', models.TextField()),
                ('Dean', models.TextField()),
                ('Director', models.TextField()),
                ('tos_info_date_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('Status', models.IntegerField(choices=[(0, 'Saved'), (1, 'To review'), (2, 'Approved'), (3, 'Needs Revision')], default=0, null=True)),
                ('teacher_tos_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_tos_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tos_info',
            },
        ),
        migrations.AddField(
            model_name='tos_content',
            name='teacher_tos',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_tos', to='api.tos_info'),
        ),
        migrations.CreateModel(
            name='Teacher_notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_text', models.TextField()),
                ('notification_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('tos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tos_info_notif_teacher', to='api.tos_info')),
            ],
            options={
                'db_table': 'notification_teacher',
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='tos_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tos_id', to='api.tos_info'),
        ),
        migrations.CreateModel(
            name='Admin_notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_text', models.TextField()),
                ('notification_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('tos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tos_info_notif_admin', to='api.tos_info')),
            ],
            options={
                'db_table': 'notification_admin',
            },
        ),
        migrations.CreateModel(
            name='Admin_Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('reviewed', models.DateTimeField(auto_now_add=True, null=True)),
                ('tos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tos_info_approval', to='api.tos_info')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
    ]
